---
import SiteLayout from "../layouts/SiteLayout.astro";
import DownloadButton from "../components/DownloadButton.astro";
import { images } from "../consts/images";

type Image = (typeof images)[number];

const distributeIntoThree = (arr: Image[]) => {
  const result: Image[][] = [[], [], []];
  arr.forEach((item, index) => {
    result[index % 3].push(item);
  });
  return result;
};

const columns = distributeIntoThree(images);
---

<SiteLayout>
  <div class="Grid_gridWrapper">
    {
      columns.map((images) => (
        <div class="BreakpointGrid_column">
          {images.map((image) => (
            <div class="BreakpointGrid_item">
              <article class="MediaCard_card">
                <a
                  href={`/details/${image.name}`}
                  class="MediaCard_content"
                  data-testid="next-link"
                >
                  <picture>
                    <source srcset={image.srcSetAvif} type="image/avif" />
                    <source srcset={image.srcSetJpg} type="image/jpeg" />
                    <img
                      loading="lazy"
                      src={image.src}
                      sizes="(max-width: 650px) calc((100vw - 42px) / 2), 33vw"
                      alt=""
                      style={`view-transition-name: image-${image.name};`}
                    />
                  </picture>
                  <div class="MediaCard_overlay" />
                  <DownloadButton name={image.name}>Download</DownloadButton>
                </a>
              </article>
            </div>
          ))}
        </div>
      ))
    }
  </div>

  <style>
    img {
      width: 100%;
      display: block;
    }

    .Grid_gridWrapper {
      display: grid;
      gap: 1.5rem;
      grid-template-columns: 1fr;
    }

    @media (min-width: 768px) {
      .Grid_gridWrapper {
        grid-template-columns: 1fr 1fr 1fr;
      }
    }

    .BreakpointGrid_column {
      display: flex;
      flex-direction: column;
      gap: 1.5rem;
    }

    .MediaCard_overlay {
      position: absolute;
      pointer-events: none;
      background: linear-gradient(
        180deg,
        rgba(0, 0, 0, 0.1),
        transparent 20%,
        transparent 80%,
        rgba(0, 0, 0, 0.3)
      );
      transition: opacity 0.1s linear;
      inset: 0;
      opacity: 0;
    }

    .MediaCard_card {
      position: relative;
    }

    .MediaCard_card:hover .MediaCard_overlay {
      opacity: 1;
    }

    .DownloadButton {
      position: absolute;
    }

    .MediaCard_card:not(:hover) .DownloadButton {
      display: none;
    }
  </style>
</SiteLayout>
