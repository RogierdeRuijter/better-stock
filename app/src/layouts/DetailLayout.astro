---
import type { GetImageResult } from "astro";
import Layout from "./Layout.astro";
import { getImage } from "astro:assets";
import Navigation from "../components/Navigation.astro";
import DownloadButton from "../components/DownloadButton.astro";

interface Props {
  frontmatter: {
    name: string;
    width: number;
    height: number;
    widths: number[];
    displayName: string;
  };
}

const { frontmatter } = Astro.props;

const { name, width, height, widths, displayName } = frontmatter;

const basePath = "/assets";

const imgName = name;

const getImageResultJpg = await getImage({
  src: `/assets/${name}`,
  widths,
  format: "jpg",
  width,
  height,
});

const getImageResultAvif = await getImage({
  src: `/assets/${name}`,
  widths,
  format: "avif",
  width,
  height,
});

const generateSrcset = (getImageResult: GetImageResult): string => {
  let srcset = "";
  const values = getImageResult.srcSet.values;

  values.forEach((value) => {
    const { src, width, format } = value.transform;
    const attribute = `${src}_${width}px.${format} ${value.descriptor}`;
    srcset += attribute;

    if (value !== values[values.length - 1]) {
      srcset += ", ";
    }
  });

  return srcset;
};

let imageWidth = "auto";
let pageHeight = "auto";

if (frontmatter.width > frontmatter.height) {
  imageWidth = `calc(var(--max-photo-height) * ${frontmatter.width} / ${frontmatter.height})`;
} else {
  pageHeight = `calc(var(--container-width) * ${frontmatter.height} / ${frontmatter.width})`;
}
---

<Layout>
  <Navigation />
  <main>
    <div class="DetailLayout-container">
    <DownloadButton {name}>Free Download</DownloadButton>
    <picture>
      <source srcset={generateSrcset(getImageResultAvif)} type="image/avif" />
      <source srcset={generateSrcset(getImageResultJpg)} type="image/jpg" />
      <img
        style={`view-transition-name: image-${imgName}`}
        loading="lazy"
        src={basePath + "/" + imgName + "_600px.jpg"}
        sizes="100vw"
        alt=""
      />
    </picture>
    <h1>
      {displayName}
    </h1>
  </main>
  <div>
</Layout>

<style
  define:vars={{
    imageWidth,
    pageHeight,
  }}
>
  main {
    --container-width: 96vw;
    --max-photo-height: 65svh;

    padding: 1rem;
  }

  @media (min-width: 768px) {
    main {
      --max-photo-height: 70svh;
    }
  }

  .DetailLayout-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    max-width: 1280px;
    margin: 0 auto;
  }

  .DownloadButton {
    align-self: flex-end;
    width: 20ch;
    margin-block-end: 1rem;
  }

  img {
    display: block;
    height: var(--pageHeight);
    width: var(--imageWidth);
    max-height: var(--max-photo-height);
    max-width: 100%;
  }
</style>
